version: '3.8'

# create network to application stack infrastructure
networks:
  jnet:
    driver: bridge

services:

  # database aplication
  mysql:
    image: mariadb:latest
    command: '--default-authentication-plugin=mysql_native_password'
    #restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mariadb-admin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    environment:
      - MARIADB_USER=treinawebusr
      - MARIADB_PASSWORD=treinawebpwd
      - MARIADB_DATABASE=treinaweb
      - MARIADB_ROOT_PASSWORD_FILE=/run/secrets/db-password
    restart: always
    # ports:
    #   - 3306:3306
    networks:
      - jnet

  # application
  app:
    # build default Dockerfile
    build: .
    container_name: "java_app"
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - jnet

  # phpadmin - you need read database :)
  phpadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: dbadmin
    ports:
      - "9090:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=treinawebusr
      - PMA_PASSWORD=treinawebpwd
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - jnet

  newman:
    image: postman/newman:alpine
    container_name: api_tests
    volumes:
      - ./newman/tests:/etc/newman
    entrypoint:
      - /bin/sh 
      - -xvc
      - | 
        npm instal --global newman-reporter-html; 
        newman run \
          --iteration-count 10 \
          --environment test-docker.postman_environment.json \
          simple_spring_boot_rest_api.postman_collection.json \
          --reporters html;
    depends_on:
      - app
    networks:
      - jnet

secrets:
  db-password:
    file: db/pwd.txt