{
	"info": {
		"_postman_id": "79e1663b-88ab-4aba-bec6-70d4a285b8c3",
		"name": "Simple Spring Boot REST API",
		"description": "\"Um exemplo de aplicação Spring Boot REST API\"\n\nContact Support:\n Name: Wladimilson\n Email: contato@treinaweb.com.br",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1786200"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(`${pm.info.requestName} - Response body structure is valid`, function () {",
									"    pm.expect(pm.response.json()).to.have.property('token'); // verifica se o response possui o elemento 'token'",
									"    pm.environment.set(\"token\", pm.response.json().token); // salva o token",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"toke\": \"blablablablabla\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"login"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "pessoa",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "GetById",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(`${pm.info.requestName} - Response body structure is valid`, function () {",
											"    const data = pm.response.json();",
											"    pm.expect(data).to.have.property('id'); // valida a propriedade 'id' no json",
											"    pm.expect(data).to.have.property('nome'); // valida a propriedade 'nome' no json ",
											"    ",
											"    const db = {",
											"        // pega ultimo registro salvo",
											"        id: pm.environment.get('db_id'),",
											"        nome: pm.environment.get('db_nome')",
											"    };",
											"    pm.expect(db.id).to.be.a(\"number\"); // check se o campo 'id' esta realmente com um valor numerico",
											"    pm.expect(db.nome).to.be.a(\"string\"); // check se o campo 'nome' esta realmente com um valor string",
											"",
											"    pm.expect(db.id).to.eql(data.id); // compara o id coletado com o salvo",
											"    pm.expect(db.nome).to.eql(data.nome); // compara o nome coletado com o salvo",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pessoa/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{db_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -82075899,\n  \"nome\": \"ullamco fugiat\"\n}"
								},
								{
									"name": "Forbidden!",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "500 message",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						},
						{
							"name": "GetByIdAfterPut",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(`${pm.info.requestName} - Response body structure is valid`, function () {",
											"    const data = pm.response.json();",
											"    pm.expect(data).to.have.property('id'); // valida a propriedade 'id' no json",
											"    pm.expect(data).to.have.property('nome'); // valida a propriedade 'nome' no json ",
											"    ",
											"    const db = {",
											"        // pega ultimo registro salvo",
											"        id: pm.environment.get('db_id'),",
											"        nome: pm.environment.get('db_nome')",
											"    };",
											"    pm.expect(db.id).to.be.a(\"number\"); // check se o campo 'id' esta realmente com um valor numerico",
											"    pm.expect(db.nome).to.be.a(\"string\"); // check se o campo 'nome' esta realmente com um valor string",
											"",
											"    pm.expect(db.id).to.eql(data.id); // compara o id coletado com o salvo",
											"    pm.expect(db.nome).to.eql(data.nome); // compara o nome coletado com o salvo",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/pessoa/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{db_id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -82075899,\n  \"nome\": \"ullamco fugiat\"\n}"
								},
								{
									"name": "Forbidden!",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "500 message",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"value\": \"reference #/components/schemas/Error not found in the OpenAPI spec\"\n}"
								}
							]
						},
						{
							"name": "Put",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(`${pm.info.requestName} - Response body structure is valid`, function () {",
											"    const data = pm.response.json();",
											"    pm.expect(data).to.have.property('id'); // valida a existencia do campo 'id'",
											"    pm.expect(data).to.have.property('nome'); // valida a existencia do campo 'nome'",
											"",
											"    pm.environment.set('db_id', data.id); // salva o campo 'id' registrado na api",
											"    pm.environment.set('db_nome', data.nome); // salva o campo 'nome' registrado na api",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": {{db_id}},\n  \"nome\": \"{{$randomLastName}} {{$randomFirstName}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pessoa/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{db_id}}",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -82075899,\n  \"nome\": \"ullamco fugiat\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://localhost:8080/pessoa/:id",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 0,\n  \"nome\": \"Bruce Waine - PUT\"\n}"
								}
							]
						},
						{
							"name": "Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"['token','db_id','db_nome','id']",
											"    .forEach(k=>pm.environment.unset(k)); // remove as variaveis temporarias"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pessoa/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{db_id}}",
											"description": "(Required) id"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pessoa/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pessoa",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "39987363",
													"description": "(Required) id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						}
					]
				},
				{
					"name": "Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(`${pm.info.requestName} - Response body structure is valid`, function () {",
									"    const data = pm.response.json();",
									"    pm.expect(data).to.have.property('id'); // valida a existencia do campo 'id'",
									"    pm.expect(data).to.have.property('nome'); // valida a existencia do campo 'nome'",
									"",
									"    pm.environment.set('db_id', data.id); // salva o campo 'id' registrado na api",
									"    pm.environment.set('db_nome', data.nome); // salva o campo 'nome' registrado na api",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nome\": \"{{$randomFirstName}} {{$randomLastName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pessoa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pessoa"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -82075899,\n  \"nome\": \"ullamco fugiat\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pessoa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": -82075899,\n  \"nome\": \"ullamco fugiat\"\n}"
						}
					]
				},
				{
					"name": "GetAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(`${pm.info.requestName} - check response list size`, () => {",
									"    pm.expect(pm.response.json().length).to.gte(0); // valida se o payload trouxe ao menos um registro",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pessoa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pessoa"
							]
						}
					},
					"response": [
						{
							"name": "Retorna a lista de pessoa",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pessoa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": -9176020,\n    \"nome\": \"aliqua ea dolor reprehenderit ex\"\n  },\n  {\n    \"id\": 27211709,\n    \"nome\": \"Lorem tempor laboris est veniam\"\n  }\n]"
						},
						{
							"name": "Você não tem permissão para acessar este recurso",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pessoa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Foi gerada uma exceção",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "<API Key>",
										"description": "Added as a part of security scheme: apikey"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pessoa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pessoa"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"value\": \"reference #/components/schemas/Error not found in the OpenAPI spec\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"const token = pm.environment.get(\"token\");       // token ",
					"const workflow = pm.environment.get('workflow').split(','); // workflow",
					"",
					"let next = pm.info.requestName; // nome do request",
					"let idx = workflow.indexOf(next); // id do request no workflow",
					"",
					"if(token) { // se existir token",
					"    next = (idx>=0) ? workflow[idx+1] : null;  // pega nome do proximo request no workflow ",
					"} else { // se nso existir token",
					"    next = workflow[0]; // pega o primeiro request do workflow",
					"}",
					"",
					"console.log((next)?`next: ${next}`:'end tests'); // loga o proximo request na console",
					"pm.execution.setNextRequest(next); // seta o proximo request"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(`${pm.info.requestName} - OK` , () => {",
					"    pm.response.to.have.status(200); // realiza a valisacao do status OK paracada um dos requests",
					"});",
					"",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}